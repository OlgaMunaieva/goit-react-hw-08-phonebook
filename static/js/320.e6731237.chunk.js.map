{"version":3,"file":"static/js/320.e6731237.chunk.js","mappings":"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","sources":["components/contact_form/ContactForm.styled.js","redux/contacts/selectors.js","components/contact_form/ContactForm.jsx","components/contact_list/ContactList.styled.js","components/contact_list/ContactList.jsx","components/container_settings/ConteinerSettings.style.js","components/filter/Filter.jsx","components/phonebook/Phonebook.jsx","pages/PhonebookPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerForm = styled.form`\n  /* margin: 20px; */\n  padding: 12px;\n  min-width: 300px;\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n  justify-content: center;\n  border: 2px solid;\n  /* background-color: #d9caca;\n  box-shadow: rgb(0 0 0 / 20%) 0px 9px 9px -6px,\n    rgb(0 0 0 / 14%) 0px 9px 12px 0px, rgb(0 0 0 / 12%) 0px 3px 24px 0px;\n  border-radius: 20px; */\n`;\n\nexport const ContainerInput = styled.label`\n  /* margin: 20px; */\n  padding: 12px;\n  /* min-width: 300px; */\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n  justify-content: center;\n  border: 2px solid;\n  /* background-color: #d9caca;\n  box-shadow: rgb(0 0 0 / 20%) 0px 9px 9px -6px,\n    rgb(0 0 0 / 14%) 0px 9px 12px 0px, rgb(0 0 0 / 12%) 0px 3px 24px 0px;\n  border-radius: 20px; */\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!filter) {\n      return contacts;\n    }\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport { ContainerForm, ContainerInput } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const {\n      elements: { name, number },\n    } = form;\n    const isExist = contacts.find(\n      contact => contact.name.toLowerCase() === name.value.toLowerCase()\n    );\n    if (isExist) {\n      alert(`${name.value} is already in contacts`);\n      return;\n    }\n    dispatch(addContact({ name: name.value, number: number.value }));\n    setName('');\n    setNumber('');\n    form.reset();\n  };\n\n  const handleChangeName = event => setName(event.target.value);\n\n  const handleChangeNumber = event => setNumber(event.target.value);\n\n  return (\n    <ContainerForm action=\"\" onSubmit={handleOnSubmit}>\n      <ContainerInput htmlFor=\"\" name=\"name\">\n        Name\n        <input\n          value={name}\n          onChange={handleChangeName}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </ContainerInput>\n      <ContainerInput htmlFor=\"\" name=\"number\">\n        Number\n        <input\n          value={number}\n          onChange={handleChangeNumber}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </ContainerInput>\n\n      <button type=\"submit\">Add contact</button>\n    </ContainerForm>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ContainerList = styled.ul`\n  position: relative;\n  top: 460px;\n  max-width: 800px;\n  width: 80%;\n  /* left: 6%; */\n  /* right: 6%; */\n  padding: 0 6%;\n  min-width: 300px;\n  display: flex;\n  gap: 4px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nexport const ContainerItem = styled.li`\n  padding: 6px 0;\n  min-width: 300px;\n  display: flex;\n  gap: 16px;\n  flex-direction: row;\n  justify-content: left;\n  align-items: center;\n`;\n","import { useEffect } from 'react';\nimport { ContainerItem, ContainerList } from './ContactList.styled';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <ContainerList>\n      {contacts &&\n        contacts.map(({ id, name, phone }) => (\n          <ContainerItem key={id}>\n            {name}: {phone}\n            <AiOutlineCloseCircle onClick={() => onDelete(id)} />\n          </ContainerItem>\n        ))}\n    </ContainerList>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const ContainerSettings = styled.div`\n  position: fixed;\n  max-width: 600px;\n  /* min-width: 300px; */\n  z-index: 2;\n  background-color: white;\n  padding: 0 6%;\n  /* padding-left: auto; */\n  width: 80%;\n  /* left: 6%; */\n  /* right: 6%; */\n  /* margin: 6px auto;\n  max-width: 800px; */\n  /* display: flex; */\n  /* flex-direction: column; */\n  /* justify-content: center; */\n  /* align-items: center; */\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input onChange={handleFilterChange} type=\"search\" name=\"filter\" id=\"\" />\n    </>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/contact_form/ContactForm';\nimport ContactList from 'components/contact_list/ContactList';\nimport { ContainerSettings } from 'components/container_settings/ConteinerSettings.style';\nimport Filter from 'components/filter/Filter';\n\nexport const Phonebook = () => {\n  return (\n    <>\n      <ContainerSettings>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n      </ContainerSettings>\n      <ContactList />\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { Phonebook } from 'components/phonebook/Phonebook';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function PhonebookPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      {/* <TaskEditor /> */}\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Phonebook />\n    </>\n  );\n}\n"],"names":["ContainerForm","styled","_templateObject","_taggedTemplateLiteral","ContainerInput","_templateObject2","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useSelector","_jsxs","action","onSubmit","event","preventDefault","form","target","_form$elements","elements","find","value","alert","concat","addContact","reset","children","htmlFor","_jsx","onChange","type","pattern","title","required","ContainerList","ContainerItem","useEffect","fetchContacts","map","_ref","id","phone","AiOutlineCloseCircle","onClick","deleteContact","onDelete","ContainerSettings","_Fragment","e","setFilter","Phonebook","ContactForm","Filter","ContactList","PhonebookPage","Helmet"],"sourceRoot":""}