{"version":3,"file":"static/js/237.4af3bc06.chunk.js","mappings":"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","sources":["components/contact_form/ContactForm.styled.js","redux/contacts/selectors.js","components/contact_form/ContactForm.jsx","components/contact_list/ContactList.styled.js","components/contact_list/ContactList.jsx","components/phonebook/Phonebook.styled.js","components/filter/Filter.styled.js","components/filter/Filter.jsx","components/phonebook/Phonebook.jsx","pages/PhonebookPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerForm = styled.form`\n  padding: 12px;\n  min-width: 300px;\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 10px;\n  border: 2px solid;\n  background-color: none;\n`;\n\nexport const ContainerInput = styled.label`\n  padding: 12px;\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n  justify-content: center;\n  border: 2px solid;\n  border-radius: 7px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!filter) {\n      return contacts;\n    }\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport { ContainerForm, ContainerInput } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const isExist = contacts.find(\n      contact =>\n        contact.name.toLowerCase() === form.elements.name.value.toLowerCase()\n    );\n    if (isExist) {\n      alert(`${form.elements.name.value} is already in contacts`);\n      return;\n    }\n    dispatch(\n      addContact({\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n      })\n    );\n    setName('');\n    setNumber('');\n    form.reset();\n  };\n\n  const handleChangeName = event => setName(event.target.value);\n\n  const handleChangeNumber = event => setNumber(event.target.value);\n\n  return (\n    <ContainerForm action=\"\" onSubmit={handleOnSubmit}>\n      <ContainerInput htmlFor=\"\" name=\"name\">\n        Name\n        <input\n          value={name}\n          onChange={handleChangeName}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </ContainerInput>\n      <ContainerInput htmlFor=\"\" name=\"number\">\n        Number\n        <input\n          value={number}\n          onChange={handleChangeNumber}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </ContainerInput>\n\n      <button type=\"submit\">Add contact</button>\n    </ContainerForm>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ContainerList = styled.ul`\n  top: 460px;\n  padding: 0;\n  min-width: 300px;\n  display: flex;\n  gap: 4px;\n  flex-direction: column;\n  justify-content: start;\n  align-items: flex-start;\n  overflow: auto;\n  max-height: 320px; /* Максимальная высота блока списка */\n  padding-right: 10px; /* Отступ справа для полосы прокрутки */\n  ::-webkit-scrollbar {\n    width: 8px; /* Ширина полосы прокрутки */\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: #888; /* Цвет полосы прокрутки */\n    border-radius: 4px; /* Скругление углов полосы прокрутки */\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: #f5f5f5; /* Цвет фона полосы прокрутки */\n  }\n`;\n\nexport const ContainerItem = styled.li`\n  padding: 6px 0;\n  min-width: 300px;\n  display: flex;\n  gap: 16px;\n  flex-direction: row;\n  justify-content: left;\n  align-items: center;\n`;\n","import { useEffect } from 'react';\nimport { ContainerItem, ContainerList } from './ContactList.styled';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <div>\n      <h2>Contacts</h2>\n      <ContainerList>\n        {contacts &&\n          contacts.map(({ id, name, number }) => (\n            <ContainerItem key={id}>\n              {name}: {number}\n              <AiOutlineCloseCircle onClick={() => onDelete(id)} />\n            </ContainerItem>\n          ))}\n      </ContainerList>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import { colors } from 'settings/variables';\nimport styled, { css } from 'styled-components';\nimport { keyframes } from 'styled-components';\n\nconst wiggleAnimation = keyframes`\n  0% {\n    transform: rotateZ(0deg);\n  }\n  25% {\n    transform: rotateZ(-5deg);\n  }\n  75% {\n    transform: rotateZ(5deg);\n  }\n  100% {\n    transform: rotateZ(0deg);\n  }\n`;\n\nexport const ContainerSettings = styled.div`\n  top: 80px;\n  ${css`\n    @media screen and (min-width: 767px) {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n    }\n  `}\n`;\nexport const Title = styled.h1`\n  display: none;\n  writing-mode: vertical-lr; /* Вертикальное направление слева направо */\n  text-orientation: upright; /* Поворот текста в вертикальном направлении */\n  color: ${colors.success};\n  animation: ${wiggleAnimation} 1s ease -in -out 5;\n  ${css`\n    @media screen and (min-width: 767px) {\n      display: block;\n    }\n  `}\n`;\n","import { styled } from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  text-align: center;\n  margin-top: 30px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { FilterContainer } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <FilterContainer>\n      <p>Find contacts by name</p>\n      <input onChange={handleFilterChange} type=\"search\" name=\"filter\" />\n    </FilterContainer>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/contact_form/ContactForm';\nimport ContactList from 'components/contact_list/ContactList';\nimport { ContainerSettings, Title } from '../phonebook/Phonebook.styled';\nimport Filter from 'components/filter/Filter';\n\nexport const Phonebook = () => {\n  return (\n    <>\n      <ContainerSettings>\n        <div>\n          <ContactForm />\n          <Filter />\n        </div>\n        <div>\n          <Title>Phonebook</Title>\n        </div>\n        <ContactList />\n      </ContainerSettings>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { Phonebook } from 'components/phonebook/Phonebook';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function PhonebookPage() {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      {/* <TaskEditor /> */}\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Phonebook />\n    </>\n  );\n}\n"],"names":["ContainerForm","styled","_templateObject","_taggedTemplateLiteral","ContainerInput","_templateObject2","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useSelector","_jsxs","action","onSubmit","event","preventDefault","form","currentTarget","find","elements","value","alert","concat","addContact","reset","children","htmlFor","_jsx","onChange","target","type","pattern","title","required","ContainerList","ContainerItem","useEffect","fetchContacts","map","_ref","id","AiOutlineCloseCircle","onClick","deleteContact","onDelete","wiggleAnimation","keyframes","ContainerSettings","css","_templateObject3","Title","_templateObject4","colors","_templateObject5","FilterContainer","e","setFilter","Phonebook","_Fragment","ContactForm","Filter","ContactList","PhonebookPage","Helmet"],"sourceRoot":""}